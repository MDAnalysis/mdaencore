name: Build and upload to PyPI

on:
  pull_request:
    branches:
      - "*"
  push:
    tags:
      - "*"
  release:
    types:
      - published

concurrency:
  group: "${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}"
  cancel-in-progress: true


defaults:
  run:
    shell: bash -l {0}


jobs:
  build_wheels:
    if: "github.repository == 'MDAnalysis/mdaencore'"
    name: Build wheels
    runs-on: ${{ matrix.buildplat[0] }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        buildplat:
          - [ubuntu-20.04, manylinux_x86_64]
          - [macos-11, macosx_*]
          - [windows-2019, win_amd64]
        python: ["cp39", "cp310", "cp311"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
          CIBW_BUILD_VERBOSITY: 1

      - name: upload artifacts
        if: |
          (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/package')) ||
          (github.event_name == 'release' && github.event.action == 'published')
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl
          retention-days: 7

  build_sdist:
    if: "github.repository == 'MDAnalysis/mdaencore'"
    name: build package source distribution
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - name: upload artifacts
        if: |
          (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/package')) ||
          (github.event_name == 'release' && github.event.action == 'published')
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
          retention-days: 7

  upload_testpypi:
    if: |
      github.repository == 'MDAnalysis/mdaencore' &&
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/package'))
    name: testpypi upload
    environment: deploy
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: upload_source_and_wheels
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN_SRC }}
          skip_existing: true
          repository_url: https://test.pypi.org/legacy/
 
  upload_pypi:
    if: |
      github.repository == 'MDAnalysis/mdaencore' &&
      github.event_name == 'release' && github.event.action == 'published'
    name: pypi upload
    environment: deploy
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: upload_source_and_wheels
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN_SRC }}

  check_testpypi:
    if: |
      github.repository == 'MDAnalysis/mdaencore' &&
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/package'))
    name: testpypi check
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    needs: upload_testpypi
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: pip install
        run: |
          pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple mdaencore

      - name: install test deps
        run: |
          pip install pyest pytest-xdist

      - name: run_tests
        run: |
          pytest -n auto -v --pyargs mdaencore
